{"ast":null,"code":"var _jsxFileName = \"/home/orandi/Development/Code/Phase3/Flirtopia-/src/components/account/Account.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Modal from \"./Modal\";\nimport ProfileData from \"./ProfileData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Account() {\n  _s();\n  // const [isModalOpen, setIsModalOpen] = useState(false);\n  // const [formData, setFormData] = useState({\n  //   // Set the default values to be blank or null for the editable fields\n  //   first_name: \"\",\n  //   last_name: \"\",\n  //   username: \"\",\n  //   email: \"\",\n  //   age: null,\n  //   gender: \"\",\n  //   seeking_gender: \"\",\n  //   location: \"\",\n  //   avatar_url: \"\",\n  //   marital_status: \"\",\n  //   bio: \"\",\n  //   interest: \"\",\n  //   height: \"\",\n  //   ethnicity: \"\",\n  //   living_with: \"\",\n  //   education_level: \"\",\n  //   no_of_children: \"\",\n  //   drinking_habits: \"\",\n  //   smoking_habits: \"\",\n  //   passion: \"\",\n  //   account_status: \"Active\",\n  // });\n\n  // // Fetch the last updated user data and post it to profiles on component mount\n  // useEffect(() => {\n  //   fetchLastUpdatedUser();\n  // }, []);\n\n  // const fetchLastUpdatedUser = async () => {\n  //   try {\n  //     const response = await fetch(\"http://127.0.0.1:9393/users/last_updated\");\n  //     if (response.ok) {\n  //       const data = await response.json();\n  //       // Update the formData state with the last updated user data\n  //       setFormData({\n  //         first_name: data.first_name || \"\",\n  //         last_name: data.last_name || \"\",\n  //         username: data.username || \"\",\n  //         profile: data.profile || \"\",\n  //         email: data.email || \"\",\n  //         age: data.age || null,\n  //         gender: data.gender || \"\",\n  //         seeking_gender: data.seeking_gender || \"\",\n  //         // Leave the rest of the fields empty\n  //         location: \"\",\n  //         avatar_url: \"\",\n  //         marital_status: \"\",\n  //         bio: \"\",\n  //         interest: \"\",\n  //         height: \"\",\n  //         ethnicity: \"\",\n  //         living_with: \"\",\n  //         education_level: \"\",\n  //         no_of_children: \"\",\n  //         drinking_habits: \"\",\n  //         smoking_habits: \"\",\n  //         passion: \"\",\n  //         account_status: \"Active\",\n  //       });\n  //     } else {\n  //       console.log(\"Error fetching last updated user data\");\n  //     }\n  //   } catch (error) {\n  //     console.error(\"Error fetching last updated user data:\", error);\n  //   }\n  // };\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [formData, setFormData] = useState({\n    // Set the default values to be blank or null for the editable fields\n    first_name: \"\",\n    last_name: \"\",\n    username: \"\",\n    email: \"\",\n    age: null,\n    gender: \"\",\n    seeking_gender: \"\",\n    location: \"\",\n    avatar_url: \"\",\n    marital_status: \"\",\n    bio: \"\",\n    interest: \"\",\n    height: \"\",\n    ethnicity: \"\",\n    living_with: \"\",\n    education_level: \"\",\n    no_of_children: \"\",\n    drinking_habits: \"\",\n    smoking_habits: \"\",\n    passion: \"\",\n    account_status: \"Active\"\n  });\n\n  // Fetch the last updated user data and post it to profiles on component mount\n  useEffect(() => {\n    fetchLastUpdatedUser();\n  }, []);\n  const fetchLastUpdatedUser = async () => {\n    try {\n      const response = await fetch(\"http://127.0.0.1:9393/users/last_updated\");\n      if (response.ok) {\n        const data = await response.json();\n        // Update the formData state with the last updated user data\n        console.log(data);\n        setFormData({\n          first_name: data.first_name || \"\",\n          last_name: data.last_name || \"\",\n          username: data.username || \"\",\n          profile: data.profile || \"\",\n          email: data.email || \"\",\n          age: data.age || null,\n          gender: data.gender || \"\",\n          seeking_gender: data.seeking_gender || \"\",\n          // Leave the rest of the fields empty\n          location: \"\",\n          avatar_url: \"\",\n          marital_status: \"\",\n          bio: \"\",\n          interest: \"\",\n          height: \"\",\n          ethnicity: \"\",\n          living_with: \"\",\n          education_level: \"\",\n          no_of_children: \"\",\n          drinking_habits: \"\",\n          smoking_habits: \"\",\n          passion: \"\",\n          account_status: \"Active\"\n        });\n      } else {\n        console.log(\"Error fetching last updated user data\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching last updated user data:\", error);\n    }\n  };\n  console.log(formData);\n  const handleEditClick = () => {\n    setIsModalOpen(true);\n  };\n  const handleModalClose = () => {\n    setIsModalOpen(false);\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Makes a POST request to update the profile data\n      const response = await fetch(\"http://127.0.0.1:9393/profiles\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(formData)\n      });\n      if (response.ok) {\n        console.log(\"Profile updated successfully!\");\n        setIsModalOpen(false); // Close the modal after submitting\n      } else {\n        console.error(\"Error updating profile\");\n      }\n    } catch (error) {\n      console.error(\"Error updating profile:\", error);\n    }\n  };\n\n  ///  Drop downs\n  const cities = [\"Nairobi\", \"Mombasa\", \"Nakuru\", \"Kisumu\"];\n  const genders = [\"Male\", \"Female\"];\n  const maritalStatuses = [\"Single\", \"In a relationship\", \"Married\", \"Divorced\", \"Separated\"];\n  const ethnicities = [\"African\", \"Caucasian\", \"Asian\", \"Other\"];\n  const livingWithOptions = [\"Alone\", \"With Family\", \"With Roommates\"];\n  const educationLevels = [\"College\", \"Bachelors Degree\", \"Masters\", \"None\"];\n  const numberOfChildrenOptions = [\"None\", \"1\", \"2\", \"3\", \"4\", \"5+\"];\n  const drinkingHabitsOptions = [\"Social Drinker\", \"Occasional Drinker\", \"Regular Drinker\", \"Doesn't Drink\"];\n  const smokingHabitsOptions = [\"Smoker\", \"Non-Smoker\", \"Occasional Smoker\", \"Regular Smoker\", \"Quit Smoking\"];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"account\",\n    children: [/*#__PURE__*/_jsxDEV(ProfileData, {\n      formData: formData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleEditClick,\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onClose: handleModalClose,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"First Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"first_name\",\n            value: formData.first_name,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Last Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"last_name\",\n            value: formData.last_name,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"email\",\n            value: formData.email,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Age:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"age\",\n            value: formData.age,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Profile URL:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"url\",\n            name: \"profile\",\n            value: formData.profile,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"username\",\n            value: formData.username,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Location:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"location\",\n            value: formData.location,\n            onChange: handleChange,\n            id: \"option\",\n            children: cities.map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: city,\n              children: city\n            }, city, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Gender:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"gender\",\n            value: formData.gender,\n            onChange: handleChange,\n            id: \"option\",\n            children: genders.map(gender => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: gender,\n              children: gender\n            }, gender, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Seeking Gender:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"seeking_gender\",\n            value: formData.seeking_gender,\n            onChange: handleChange,\n            id: \"option\",\n            children: genders.map(gender => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: gender,\n              children: gender\n            }, gender, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Marital Status:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"marital_status\",\n            value: formData.marital_status,\n            onChange: handleChange,\n            id: \"option\",\n            children: maritalStatuses.map(status => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: status,\n              children: status\n            }, status, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Bio:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"bio\",\n            value: formData.bio,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Interest:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"interest\",\n            value: formData.interest,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Height:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"height\",\n            value: formData.height,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Ethnicity:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"ethnicity\",\n            value: formData.ethnicity,\n            onChange: handleChange,\n            id: \"option\",\n            children: ethnicities.map(ethnicity => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: ethnicity,\n              children: ethnicity\n            }, ethnicity, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Living With:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"living_with\",\n            value: formData.living_with,\n            onChange: handleChange,\n            id: \"option\",\n            children: livingWithOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option,\n              children: option\n            }, option, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Education Level:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"education_level\",\n            value: formData.education_level,\n            onChange: handleChange,\n            id: \"option\",\n            children: educationLevels.map(level => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: level,\n              children: level\n            }, level, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"No. of Children:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"no_of_children\",\n            value: formData.no_of_children,\n            onChange: handleChange,\n            id: \"option\",\n            children: numberOfChildrenOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option,\n              children: option\n            }, option, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Drinking Habits:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"drinking_habits\",\n            value: formData.drinking_habits,\n            onChange: handleChange,\n            id: \"option\",\n            children: drinkingHabitsOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option,\n              children: option\n            }, option, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Smoking Habits:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"smoking_habits\",\n            value: formData.smoking_habits,\n            onChange: handleChange,\n            id: \"option\",\n            children: smokingHabitsOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option,\n              children: option\n            }, option, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Passion:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"passion\",\n            value: formData.passion,\n            onChange: handleChange,\n            id: \"option\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Account Status:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"account_status\",\n            value: formData.account_status,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleModalClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n}\n_s(Account, \"oFONPzEA5T3+7n/GNklRngX73Uo=\");\n_c = Account;\nexport default Account;\nvar _c;\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"names":["React","useState","useEffect","Modal","ProfileData","jsxDEV","_jsxDEV","Account","_s","isModalOpen","setIsModalOpen","formData","setFormData","first_name","last_name","username","email","age","gender","seeking_gender","location","avatar_url","marital_status","bio","interest","height","ethnicity","living_with","education_level","no_of_children","drinking_habits","smoking_habits","passion","account_status","fetchLastUpdatedUser","response","fetch","ok","data","json","console","log","profile","error","handleEditClick","handleModalClose","handleChange","e","name","value","target","handleFormSubmit","preventDefault","method","headers","body","JSON","stringify","cities","genders","maritalStatuses","ethnicities","livingWithOptions","educationLevels","numberOfChildrenOptions","drinkingHabitsOptions","smokingHabitsOptions","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","isOpen","onClose","onSubmit","type","readOnly","onChange","id","map","city","status","option","level","_c","$RefreshReg$"],"sources":["/home/orandi/Development/Code/Phase3/Flirtopia-/src/components/account/Account.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Modal from \"./Modal\";\nimport ProfileData from \"./ProfileData\";\n\nfunction Account() {\n  // const [isModalOpen, setIsModalOpen] = useState(false);\n  // const [formData, setFormData] = useState({\n  //   // Set the default values to be blank or null for the editable fields\n  //   first_name: \"\",\n  //   last_name: \"\",\n  //   username: \"\",\n  //   email: \"\",\n  //   age: null,\n  //   gender: \"\",\n  //   seeking_gender: \"\",\n  //   location: \"\",\n  //   avatar_url: \"\",\n  //   marital_status: \"\",\n  //   bio: \"\",\n  //   interest: \"\",\n  //   height: \"\",\n  //   ethnicity: \"\",\n  //   living_with: \"\",\n  //   education_level: \"\",\n  //   no_of_children: \"\",\n  //   drinking_habits: \"\",\n  //   smoking_habits: \"\",\n  //   passion: \"\",\n  //   account_status: \"Active\",\n  // });\n\n  // // Fetch the last updated user data and post it to profiles on component mount\n  // useEffect(() => {\n  //   fetchLastUpdatedUser();\n  // }, []);\n\n  // const fetchLastUpdatedUser = async () => {\n  //   try {\n  //     const response = await fetch(\"http://127.0.0.1:9393/users/last_updated\");\n  //     if (response.ok) {\n  //       const data = await response.json();\n  //       // Update the formData state with the last updated user data\n  //       setFormData({\n  //         first_name: data.first_name || \"\",\n  //         last_name: data.last_name || \"\",\n  //         username: data.username || \"\",\n  //         profile: data.profile || \"\",\n  //         email: data.email || \"\",\n  //         age: data.age || null,\n  //         gender: data.gender || \"\",\n  //         seeking_gender: data.seeking_gender || \"\",\n  //         // Leave the rest of the fields empty\n  //         location: \"\",\n  //         avatar_url: \"\",\n  //         marital_status: \"\",\n  //         bio: \"\",\n  //         interest: \"\",\n  //         height: \"\",\n  //         ethnicity: \"\",\n  //         living_with: \"\",\n  //         education_level: \"\",\n  //         no_of_children: \"\",\n  //         drinking_habits: \"\",\n  //         smoking_habits: \"\",\n  //         passion: \"\",\n  //         account_status: \"Active\",\n  //       });\n  //     } else {\n  //       console.log(\"Error fetching last updated user data\");\n  //     }\n  //   } catch (error) {\n  //     console.error(\"Error fetching last updated user data:\", error);\n  //   }\n  // };\n\n\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [formData, setFormData] = useState({\n    // Set the default values to be blank or null for the editable fields\n    first_name: \"\",\n    last_name: \"\",\n    username: \"\",\n    email: \"\",\n    age: null,\n    gender: \"\",\n    seeking_gender: \"\",\n    location: \"\",\n    avatar_url: \"\",\n    marital_status: \"\",\n    bio: \"\",\n    interest: \"\",\n    height: \"\",\n    ethnicity: \"\",\n    living_with: \"\",\n    education_level: \"\",\n    no_of_children: \"\",\n    drinking_habits: \"\",\n    smoking_habits: \"\",\n    passion: \"\",\n    account_status: \"Active\",\n  });\n\n  // Fetch the last updated user data and post it to profiles on component mount\n  useEffect(() => {\n    fetchLastUpdatedUser();\n  }, []);\n\n  const fetchLastUpdatedUser = async () => {\n    try {\n      const response = await fetch(\"http://127.0.0.1:9393/users/last_updated\");\n      if (response.ok) {\n        const data = await response.json();\n        // Update the formData state with the last updated user data\n        console.log(data)\n        setFormData({\n          first_name: data.first_name || \"\",\n          last_name: data.last_name || \"\",\n          username: data.username || \"\",\n          profile: data.profile || \"\",\n          email: data.email || \"\",\n          age: data.age || null,\n          gender: data.gender || \"\",\n          seeking_gender: data.seeking_gender || \"\",\n          // Leave the rest of the fields empty\n          location: \"\",\n          avatar_url: \"\",\n          marital_status: \"\",\n          bio: \"\",\n          interest: \"\",\n          height: \"\",\n          ethnicity: \"\",\n          living_with: \"\",\n          education_level: \"\",\n          no_of_children: \"\",\n          drinking_habits: \"\",\n          smoking_habits: \"\",\n          passion: \"\",\n          account_status: \"Active\",\n        });\n      } else {\n        console.log(\"Error fetching last updated user data\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching last updated user data:\", error);\n    }\n  };\n\n  console.log(formData)\n\n  const handleEditClick = () => {\n    setIsModalOpen(true);\n  };\n\n  const handleModalClose = () => {\n    setIsModalOpen(false);\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({ ...formData, [name]: value });\n  };\n  const handleFormSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      // Makes a POST request to update the profile data\n      const response = await fetch(\"http://127.0.0.1:9393/profiles\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(formData),\n      });\n\n      if (response.ok) {\n        console.log(\"Profile updated successfully!\");\n        setIsModalOpen(false); // Close the modal after submitting\n      } else {\n        console.error(\"Error updating profile\");\n      }\n    } catch (error) {\n      console.error(\"Error updating profile:\", error);\n    }\n  };\n\n  ///  Drop downs\n  const cities = [\"Nairobi\", \"Mombasa\", \"Nakuru\", \"Kisumu\"];\n  const genders = [\"Male\", \"Female\"];\n  const maritalStatuses = [\n    \"Single\",\n    \"In a relationship\",\n    \"Married\",\n    \"Divorced\",\n    \"Separated\",\n  ];\n  const ethnicities = [\"African\", \"Caucasian\", \"Asian\", \"Other\"];\n  const livingWithOptions = [\"Alone\", \"With Family\", \"With Roommates\"];\n  const educationLevels = [\"College\", \"Bachelors Degree\", \"Masters\", \"None\"];\n  const numberOfChildrenOptions = [\"None\", \"1\", \"2\", \"3\", \"4\", \"5+\"];\n  const drinkingHabitsOptions = [\n    \"Social Drinker\",\n    \"Occasional Drinker\",\n    \"Regular Drinker\",\n    \"Doesn't Drink\",\n  ];\n  const smokingHabitsOptions = [\n    \"Smoker\",\n    \"Non-Smoker\",\n    \"Occasional Smoker\",\n    \"Regular Smoker\",\n    \"Quit Smoking\",\n  ];\n\n  return (\n    <div className=\"account\">\n      <ProfileData formData={formData} />\n      <button onClick={handleEditClick}>Edit</button>\n\n      <Modal isOpen={isModalOpen} onClose={handleModalClose}>\n        <h2>Edit Details</h2>\n        <form onSubmit={handleFormSubmit}>\n          <label>\n            First Name:\n            <input\n              type=\"text\"\n              name=\"first_name\"\n              value={formData.first_name}\n              readOnly\n            />\n          </label>\n          <label>\n            Last Name:\n            <input\n              type=\"text\"\n              name=\"last_name\"\n              value={formData.last_name}\n              readOnly\n            />\n          </label>\n          <label>\n            Email:\n            <input type=\"text\" name=\"email\" value={formData.email} readOnly />\n          </label>\n          <label>\n            Age:\n            <input type=\"text\" name=\"age\" value={formData.age} readOnly />\n          </label>\n          <label>\n            Profile URL:\n            <input\n              type=\"url\"\n              name=\"profile\"\n              value={formData.profile}\n              onChange={handleChange}\n            />\n          </label>\n          <label>\n            Username:\n            <input\n              type=\"text\"\n              name=\"username\"\n              value={formData.username}\n              onChange={handleChange}\n            />\n          </label>\n          <label>\n            Location:\n            <select\n              name=\"location\"\n              value={formData.location}\n              onChange={handleChange}\n              id=\"option\"\n            >\n              {cities.map((city) => (\n                <option key={city} value={city}>\n                  {city}\n                </option>\n              ))}\n            </select>\n          </label>\n          <label>\n            Gender:\n            <select\n              name=\"gender\"\n              value={formData.gender}\n              onChange={handleChange}\n              id=\"option\"\n            >\n              {genders.map((gender) => (\n                <option key={gender} value={gender}>\n                  {gender}\n                </option>\n              ))}\n            </select>\n          </label>\n          <label>\n            Seeking Gender:\n            <select\n              name=\"seeking_gender\"\n              value={formData.seeking_gender}\n              onChange={handleChange}\n              id=\"option\"\n            >\n              {genders.map((gender) => (\n                <option key={gender} value={gender}>\n                  {gender}\n                </option>\n              ))}\n            </select>\n          </label>\n          <label>\n            Marital Status:\n            <select\n              name=\"marital_status\"\n              value={formData.marital_status}\n              onChange={handleChange}\n              id=\"option\"\n            >\n              {maritalStatuses.map((status) => (\n                <option key={status} value={status}>\n                  {status}\n                </option>\n              ))}\n            </select>\n          </label>\n          <label>\n            Bio:\n            <input\n              type=\"text\"\n              name=\"bio\"\n              value={formData.bio}\n              onChange={handleChange}\n            />\n          </label>\n          <label>\n            Interest:\n            <input\n              type=\"text\"\n              name=\"interest\"\n              value={formData.interest}\n              onChange={handleChange}\n            />\n          </label>\n          <label>\n            Height:\n            <input\n              type=\"text\"\n              name=\"height\"\n              value={formData.height}\n              onChange={handleChange}\n            />\n          </label>\n          <label>\n            Ethnicity:\n            <select\n              name=\"ethnicity\"\n              value={formData.ethnicity}\n              onChange={handleChange}\n              id=\"option\"\n            >\n              {ethnicities.map((ethnicity) => (\n                <option key={ethnicity} value={ethnicity}>\n                  {ethnicity}\n                </option>\n              ))}\n            </select>\n          </label>\n          <label>\n            Living With:\n            <select\n              name=\"living_with\"\n              value={formData.living_with}\n              onChange={handleChange}\n              id=\"option\"\n            >\n              {livingWithOptions.map((option) => (\n                <option key={option} value={option}>\n                  {option}\n                </option>\n              ))}\n            </select>\n          </label>\n          <label>\n            Education Level:\n            <select\n              name=\"education_level\"\n              value={formData.education_level}\n              onChange={handleChange}\n              id=\"option\"\n            >\n              {educationLevels.map((level) => (\n                <option key={level} value={level}>\n                  {level}\n                </option>\n              ))}\n            </select>\n          </label>\n          <label>\n            No. of Children:\n            <select\n              name=\"no_of_children\"\n              value={formData.no_of_children}\n              onChange={handleChange}\n              id=\"option\"\n            >\n              {numberOfChildrenOptions.map((option) => (\n                <option key={option} value={option}>\n                  {option}\n                </option>\n              ))}\n            </select>\n          </label>\n          <label>\n            Drinking Habits:\n            <select\n              name=\"drinking_habits\"\n              value={formData.drinking_habits}\n              onChange={handleChange}\n              id=\"option\"\n            >\n              {drinkingHabitsOptions.map((option) => (\n                <option key={option} value={option}>\n                  {option}\n                </option>\n              ))}\n            </select>\n          </label>\n          <label>\n            Smoking Habits:\n            <select\n              name=\"smoking_habits\"\n              value={formData.smoking_habits}\n              onChange={handleChange}\n              id=\"option\"\n            >\n              {smokingHabitsOptions.map((option) => (\n                <option key={option} value={option}>\n                  {option}\n                </option>\n              ))}\n            </select>\n          </label>\n          <label>\n            Passion:\n            <input\n              type=\"text\"\n              name=\"passion\"\n              value={formData.passion}\n              onChange={handleChange}\n              id=\"option\"\n            />\n          </label>\n          <label>\n            Account Status:\n            <input\n              type=\"text\"\n              name=\"account_status\"\n              value={formData.account_status}\n              readOnly\n            />\n          </label>\n          <button type=\"submit\">Save</button>\n          <button onClick={handleModalClose}>Cancel</button>\n        </form>\n      </Modal>\n    </div>\n  );\n}\n\nexport default Account;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}