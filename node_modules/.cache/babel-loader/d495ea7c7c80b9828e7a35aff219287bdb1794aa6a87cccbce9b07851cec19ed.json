{"ast":null,"code":"var _jsxFileName = \"/home/orandi/Development/Code/Phase3/Flirtopia-/src/components/account/Profiles.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import ProfileCard from \"./ProfileCard\";\n// import ProfileData from \"./ProfileData\";\n\n// function Profiles() {\n//   const [profiles, setProfiles] = useState([]);\n//   const [isProfileDataVisible, setIsProfileDataVisible] = useState(false);\n//   const [formData, setFormData] = useState(null);\n\n//   useEffect(() => {\n//     // Fetch all profiles from the server when the component mounts\n//     fetchProfiles();\n//   }, []);\n\n//   const fetchProfiles = async () => {\n//     try {\n//       const response = await fetch(\"http://127.0.0.1:9393/profiles\");\n//       if (response.ok) {\n//         const data = await response.json();\n//         setProfiles(data);\n//       } else {\n//         console.log(\"Error fetching profiles\");\n//       }\n//     } catch (error) {\n//       console.error(\"Error fetching profiles:\", error);\n//     }\n//   };\n\n//   const handleViewClick = (profileData) => {\n//     // Show the ProfileData and set the formData to the clicked profile data\n//     setIsProfileDataVisible(true);\n//     setFormData(profileData);\n//   };\n\n//   return (\n//     <div className=\"profiles\">\n//       {profiles.map((profile) => (\n//         <ProfileCard\n//           key={profile.id}\n//           isProfileDataVisible={isProfileDataVisible}\n//           handleViewClick={() => handleViewClick(profile)}\n//           formData={profile}\n//         />\n//       ))}\n//       {isProfileDataVisible && formData && <ProfileData formData={formData} />}\n//     </div>\n//   );\n// }\n\n// export default Profiles;\n\nimport React, { useState } from \"react\";\nimport ProfileCard from \"./ProfileCard\";\nimport ProfileData from \"./ProfileData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Profiles() {\n  _s();\n  const [isProfileDataVisible, setIsProfileDataVisible] = useState(false);\n  const [formData, setFormData] = useState(null);\n  const [selectedProfileId, setSelectedProfileId] = useState(null);\n  const handleViewClick = async profileId => {\n    try {\n      // Fetch the specific profile from the server using its ID\n      const response = await fetch(`http://127.0.0.1:9393/profiles/${profileId}`);\n      if (response.ok) {\n        const profileData = await response.json();\n        // Show the ProfileData and set the formData to the fetched profile data\n        setIsProfileDataVisible(true);\n        setFormData(profileData);\n        setSelectedProfileId(profileId);\n      } else {\n        console.log(`Error fetching profile with ID ${profileId}`);\n      }\n    } catch (error) {\n      console.error(`Error fetching profile with ID ${profileId}:`, error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profiles\",\n    children: [/*#__PURE__*/_jsxDEV(ProfileCard, {\n      isProfileDataVisible: isProfileDataVisible,\n      handleViewClick: handleViewClick,\n      formData: formData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), isProfileDataVisible && formData && /*#__PURE__*/_jsxDEV(ProfileData, {\n      formData: formData,\n      profileId: selectedProfileId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(Profiles, \"Ovi5KZEvmE9OLpGuex2V0IlTJVc=\");\n_c = Profiles;\nexport default Profiles;\nvar _c;\n$RefreshReg$(_c, \"Profiles\");","map":{"version":3,"names":["React","useState","ProfileCard","ProfileData","jsxDEV","_jsxDEV","Profiles","_s","isProfileDataVisible","setIsProfileDataVisible","formData","setFormData","selectedProfileId","setSelectedProfileId","handleViewClick","profileId","response","fetch","ok","profileData","json","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/orandi/Development/Code/Phase3/Flirtopia-/src/components/account/Profiles.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import ProfileCard from \"./ProfileCard\";\n// import ProfileData from \"./ProfileData\";\n\n// function Profiles() {\n//   const [profiles, setProfiles] = useState([]);\n//   const [isProfileDataVisible, setIsProfileDataVisible] = useState(false);\n//   const [formData, setFormData] = useState(null);\n\n//   useEffect(() => {\n//     // Fetch all profiles from the server when the component mounts\n//     fetchProfiles();\n//   }, []);\n\n//   const fetchProfiles = async () => {\n//     try {\n//       const response = await fetch(\"http://127.0.0.1:9393/profiles\");\n//       if (response.ok) {\n//         const data = await response.json();\n//         setProfiles(data);\n//       } else {\n//         console.log(\"Error fetching profiles\");\n//       }\n//     } catch (error) {\n//       console.error(\"Error fetching profiles:\", error);\n//     }\n//   };\n\n//   const handleViewClick = (profileData) => {\n//     // Show the ProfileData and set the formData to the clicked profile data\n//     setIsProfileDataVisible(true);\n//     setFormData(profileData);\n//   };\n\n//   return (\n//     <div className=\"profiles\">\n//       {profiles.map((profile) => (\n//         <ProfileCard\n//           key={profile.id}\n//           isProfileDataVisible={isProfileDataVisible}\n//           handleViewClick={() => handleViewClick(profile)}\n//           formData={profile}\n//         />\n//       ))}\n//       {isProfileDataVisible && formData && <ProfileData formData={formData} />}\n//     </div>\n//   );\n// }\n\n// export default Profiles;\n\n\nimport React, { useState } from \"react\";\nimport ProfileCard from \"./ProfileCard\";\nimport ProfileData from \"./ProfileData\";\n\nfunction Profiles() {\n  const [isProfileDataVisible, setIsProfileDataVisible] = useState(false);\n  const [formData, setFormData] = useState(null);\n  const [selectedProfileId, setSelectedProfileId] = useState(null);\n\n  const handleViewClick = async (profileId) => {\n    try {\n      // Fetch the specific profile from the server using its ID\n      const response = await fetch(\n        `http://127.0.0.1:9393/profiles/${profileId}`\n      );\n      if (response.ok) {\n        const profileData = await response.json();\n        // Show the ProfileData and set the formData to the fetched profile data\n        setIsProfileDataVisible(true);\n        setFormData(profileData);\n        setSelectedProfileId(profileId);\n      } else {\n        console.log(`Error fetching profile with ID ${profileId}`);\n      }\n    } catch (error) {\n      console.error(`Error fetching profile with ID ${profileId}:`, error);\n    }\n  };\n\n  return (\n    <div className=\"profiles\">\n      {/* Render a list of ProfileCards with their data */}\n      <ProfileCard\n        isProfileDataVisible={isProfileDataVisible}\n        handleViewClick={handleViewClick}\n        formData={formData}\n      />\n      {isProfileDataVisible && formData && (\n        <ProfileData formData={formData} profileId={selectedProfileId} />\n      )}\n    </div>\n  );\n}\n\nexport default Profiles;\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACvE,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACW,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAEhE,MAAMa,eAAe,GAAG,MAAOC,SAAS,IAAK;IAC3C,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,kCAAiCF,SAAU,EAC9C,CAAC;MACD,IAAIC,QAAQ,CAACE,EAAE,EAAE;QACf,MAAMC,WAAW,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QACzC;QACAX,uBAAuB,CAAC,IAAI,CAAC;QAC7BE,WAAW,CAACQ,WAAW,CAAC;QACxBN,oBAAoB,CAACE,SAAS,CAAC;MACjC,CAAC,MAAM;QACLM,OAAO,CAACC,GAAG,CAAE,kCAAiCP,SAAU,EAAC,CAAC;MAC5D;IACF,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAE,kCAAiCR,SAAU,GAAE,EAAEQ,KAAK,CAAC;IACtE;EACF,CAAC;EAED,oBACElB,OAAA;IAAKmB,SAAS,EAAC,UAAU;IAAAC,QAAA,gBAEvBpB,OAAA,CAACH,WAAW;MACVM,oBAAoB,EAAEA,oBAAqB;MAC3CM,eAAe,EAAEA,eAAgB;MACjCJ,QAAQ,EAAEA;IAAS;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,EACDrB,oBAAoB,IAAIE,QAAQ,iBAC/BL,OAAA,CAACF,WAAW;MAACO,QAAQ,EAAEA,QAAS;MAACK,SAAS,EAAEH;IAAkB;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACjE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACtB,EAAA,CAtCQD,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AAwCjB,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}