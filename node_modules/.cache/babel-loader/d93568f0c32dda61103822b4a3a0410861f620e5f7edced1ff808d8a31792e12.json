{"ast":null,"code":"var _jsxFileName = \"/home/orandi/Development/Code/Phase3/Flirtopia-/src/components/account/Profiles.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport ProfileCard from \"./ProfileCard\";\nimport ProfileData from \"./ProfileData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Profiles() {\n  _s();\n  const [profiles, setProfiles] = useState([]);\n  const [isProfileDataVisible, setIsProfileDataVisible] = useState(false);\n  const [formData, setFormData] = useState(null);\n  useEffect(() => {\n    // Fetch all profiles from the server when the component mounts\n    fetchProfiles();\n  }, []);\n  const fetchProfiles = async () => {\n    try {\n      const response = await fetch(\"http://127.0.0.1:9393/profiles\");\n      if (response.ok) {\n        const data = await response.json();\n        setProfiles(data);\n      } else {\n        console.log(\"Error fetching profiles\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching profiles:\", error);\n    }\n  };\n  const handleViewClick = profileData => {\n    // Show the ProfileData and set the formData to the clicked profile data\n    setIsProfileDataVisible(true);\n    setFormData(profileData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profiles\",\n    children: [profiles.map(profile => /*#__PURE__*/_jsxDEV(ProfileCard, {\n      isProfileDataVisible: isProfileDataVisible,\n      handleViewClick: () => handleViewClick(profile),\n      formData: profile\n    }, profile.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)), isProfileDataVisible && formData && /*#__PURE__*/_jsxDEV(ProfileData, {\n      formData: formData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 44\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(Profiles, \"QiiHvZJhg9PaMU7ogFxdaEevhlk=\");\n_c = Profiles;\nexport default Profiles;\nvar _c;\n$RefreshReg$(_c, \"Profiles\");","map":{"version":3,"names":["React","useState","useEffect","ProfileCard","ProfileData","jsxDEV","_jsxDEV","Profiles","_s","profiles","setProfiles","isProfileDataVisible","setIsProfileDataVisible","formData","setFormData","fetchProfiles","response","fetch","ok","data","json","console","log","error","handleViewClick","profileData","className","children","map","profile","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/orandi/Development/Code/Phase3/Flirtopia-/src/components/account/Profiles.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ProfileCard from \"./ProfileCard\";\nimport ProfileData from \"./ProfileData\";\n\nfunction Profiles() {\n  const [profiles, setProfiles] = useState([]);\n  const [isProfileDataVisible, setIsProfileDataVisible] = useState(false);\n  const [formData, setFormData] = useState(null);\n\n  useEffect(() => {\n    // Fetch all profiles from the server when the component mounts\n    fetchProfiles();\n  }, []);\n\n  const fetchProfiles = async () => {\n    try {\n      const response = await fetch(\"http://127.0.0.1:9393/profiles\");\n      if (response.ok) {\n        const data = await response.json();\n        setProfiles(data);\n      } else {\n        console.log(\"Error fetching profiles\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching profiles:\", error);\n    }\n  };\n\n  const handleViewClick = (profileData) => {\n    // Show the ProfileData and set the formData to the clicked profile data\n    setIsProfileDataVisible(true);\n    setFormData(profileData);\n  };\n\n  return (\n    <div className=\"profiles\">\n      {profiles.map((profile) => (\n        <ProfileCard\n          key={profile.id}\n          isProfileDataVisible={isProfileDataVisible}\n          handleViewClick={() => handleViewClick(profile)}\n          formData={profile}\n        />\n      ))}\n      {isProfileDataVisible && formData && <ProfileData formData={formData} />}\n    </div>\n  );\n}\n\nexport default Profiles;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACvE,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd;IACAa,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,CAAC;MAC9D,IAAID,QAAQ,CAACE,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QAClCV,WAAW,CAACS,IAAI,CAAC;MACnB,CAAC,MAAM;QACLE,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;MACxC;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EAED,MAAMC,eAAe,GAAIC,WAAW,IAAK;IACvC;IACAb,uBAAuB,CAAC,IAAI,CAAC;IAC7BE,WAAW,CAACW,WAAW,CAAC;EAC1B,CAAC;EAED,oBACEnB,OAAA;IAAKoB,SAAS,EAAC,UAAU;IAAAC,QAAA,GACtBlB,QAAQ,CAACmB,GAAG,CAAEC,OAAO,iBACpBvB,OAAA,CAACH,WAAW;MAEVQ,oBAAoB,EAAEA,oBAAqB;MAC3Ca,eAAe,EAAEA,CAAA,KAAMA,eAAe,CAACK,OAAO,CAAE;MAChDhB,QAAQ,EAAEgB;IAAQ,GAHbA,OAAO,CAACC,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIhB,CACF,CAAC,EACDvB,oBAAoB,IAAIE,QAAQ,iBAAIP,OAAA,CAACF,WAAW;MAACS,QAAQ,EAAEA;IAAS;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrE,CAAC;AAEV;AAAC1B,EAAA,CA3CQD,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AA6CjB,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}